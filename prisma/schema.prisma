// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String    @default("Linkey User")
  username        String    @default("")
  bio             String    @default("I am a linkey user âœŒ")
  email           String    @unique
  emailVerified   DateTime?
  image           String    @default("https://images.unsplash.com/photo-1523251343397-9225e4cb6319?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=387&q=80")
  hashedPassword  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  prompts          Prompt[]
  accounts        Account[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Prompt {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  text      String
  service   String?
  images    String[]
  likes     String[]  @db.ObjectId  
  tags      String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  published Boolean   @default(false)
  clicks    Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}




model VerificationToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier  String
  token       String    @unique
  expires     DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
  VERIFIED
}

